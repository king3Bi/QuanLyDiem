<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        FSQ+xf8DCk+SdH4QFlIAAAAASUVORK5CYII=
</value>
  </data>
</root>